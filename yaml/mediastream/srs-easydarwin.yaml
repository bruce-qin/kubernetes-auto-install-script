#所有推流协议必须要有两层路径才能保证不出错:/[app]/[stream]
---
### srs config
#---
apiVersion: v1
kind: ConfigMap
metadata:
  name: srs-origin-config
data:
  srs.conf: |
    listen                 1935;
    max_connections  3000;
    daemon               off;
    http_api {
        enabled         on;
        listen          1985;
    }
    http_server {
        enabled         on;
        listen          8080;
    }
    vhost __defaultVhost__ {
        min_latency     on;
        tcp_nodelay     on;
        play {
            mw_latency      100;
            gop_cache       off;
            queue_length    10;
        }
        publish {
            mr          off;
        }
        cluster {
            origin_cluster  on;
            coworkers       srs-origin-0.socs srs-origin-1.socs srs-origin-2.socs;
        }
        http_remux {
            enabled     on;
        }
        hls {
            enabled         on;
        }
    }
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: srs-edge-config
data:
  srs.conf: |
    listen              1935;
    max_connections     10000;
    daemon              off;
    grace_start_wait    700;
    grace_final_wait    800;
    force_grace_quit    on;
    http_api {
        enabled         on;
        listen          1985;
    }
    http_server {
        enabled         on;
        listen          8080;
    }
    vhost __defaultVhost__ {
        min_latency     on;
        tcp_nodelay     on;
        play {
            mw_latency      100;
            gop_cache       off;
            queue_length    10;
        }
        publish {
            mr          off;
        }
        cluster {
            mode            remote;
            origin          srs-origin-0.socs srs-origin-1.socs srs-origin2.socs;
        }
        http_remux {
            enabled     on;
            fast_cache  0;
            mount       [vhost]/[app]/[stream].flv;
        }
    }
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: srs-edge-aac-config
data:
  srs.conf: |
    listen              1935;
    max_connections     10000;
    daemon              off;
    grace_start_wait    700;
    grace_final_wait    800;
    force_grace_quit    on;
    http_api {
        enabled         on;
        listen          1985;
    }
    http_server {
        enabled         on;
        listen          8080;
    }
    vhost __defaultVhost__ {
        min_latency     on;
        tcp_nodelay     on;
        play {
            mw_latency      100;
            gop_cache       off;
            queue_length    10;
        }
        publish {
            mr          off;
        }
        cluster {
            mode            remote;
            origin          srs-origin-0.socs srs-origin-1.socs srs-origin2.socs;
        }
        http_remux {
            enabled     on;
            fast_cache  20;
            mount       [vhost]/[app]/[stream].aac;
        }
    }
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: srs-edge-mp3-config
data:
  srs.conf: |
    listen              1935;
    max_connections     10000;
    daemon              off;
    grace_start_wait    700;
    grace_final_wait    800;
    force_grace_quit    on;
    http_api {
        enabled         on;
        listen          1985;
    }
    http_server {
        enabled         on;
        listen          8080;
    }
    vhost __defaultVhost__ {
        min_latency     on;
        tcp_nodelay     on;
        play {
            mw_latency      100;
            gop_cache       off;
            queue_length    10;
        }
        publish {
            mr          off;
        }
        cluster {
            mode            remote;
            origin          srs-origin-0.socs srs-origin-1.socs srs-origin2.socs;
        }
        http_remux {
            enabled     on;
            fast_cache  20;
            mount       [vhost]/[app]/[stream].mp3;
        }
    }
---
### easydarwin
#--- 只支持rtsp tcp推流
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: easydarwin
  labels:
    app: easydarwin
spec:
  replicas: 3
  selector:
    matchLabels:
      app: easydarwin
  serviceName: rtsp-svc
  template:
    metadata:
      labels:
        app: easydarwin
    spec:
      restartPolicy: Always
      containers:
        - name: easydarwin
          image: registry.cn-hangzhou.aliyuncs.com/justtin/easydarwin
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 554
              name: rtsp
              protocol: TCP
            - containerPort: 10008
              name: web
              protocol: TCP
          env:
            - name: CLOSE_OLD
              value: "0"
            - name: ENABLE_MULTICAST
              value:  "1"
            - name:   EASYDARWIN_PUSH_FFMPEG_CMD
              value: "ffmpeg -i rtsp://127.0.0.1/{path} -c copy -v error -f flv rtmp://socs/{path} -hide_banner; ffmpeg -i rtsp://127.0.0.1/{path} -vn  -c:a aac -v error -f flv rtmp://socs/{path}-aac -hide_banner; ffmpeg -i rtsp://127.0.0.1/{path} -vn -c:a libmp3lame -v error -f flv rtmp://socs/{path}-mp3 -hide_banner"
---
apiVersion: v1
kind: Service
metadata:
  name: rtsp-svc
spec:
  selector:
    app: easydarwin
  ports:
    - port: 554
      protocol: TCP
      targetPort: 554
      name: rtsp
      nodePort: 30554
  type: NodePort
---
apiVersion: v1
kind: Service
metadata:
  name: easydarwin-web0
spec:
  type: NodePort
  selector:
    statefulset.kubernetes.io/pod-name: easydarwin-0
  ports:
    - name: easydarwin-web0
      port: 10008
      protocol: TCP
      targetPort: 10008
      nodePort: 30008
---
apiVersion: v1
kind: Service
metadata:
  name: easydarwin-web1
spec:
  type: NodePort
  selector:
    statefulset.kubernetes.io/pod-name: easydarwin-1
  ports:
    - name: easydarwin-web1
      port: 10008
      protocol: TCP
      targetPort: 10008
      nodePort: 31008
---
apiVersion: v1
kind: Service
metadata:
  name: easydarwin-web2
spec:
  type: NodePort
  selector:
    statefulset.kubernetes.io/pod-name: easydarwin-2
  ports:
    - name: easydarwin-web2
      port: 10008
      protocol: TCP
      targetPort: 10008
      nodePort: 32008
---
### srs hls pvc
#---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: srs-hls-pvc
spec:
  storageClassName: glusterfs
  accessModes:
    -   ReadWriteMany
  resources:
    requests:
      storage: 20Gi
---
###srs origin
#---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: srs-origin
  labels:
    app: srs-origin
spec:
  serviceName: socs
  replicas: 3
  selector:
    matchLabels:
      app: srs-origin
  template:
    metadata:
      labels:
        app: srs-origin
    spec:
      restartPolicy: Always
      volumes:
        - name: cache-volume
          persistentVolumeClaim:
            claimName: srs-hls-pvc
        - name: config-volume
          configMap:
            name: srs-origin-config
      containers:
        - name: srs
          image: registry.cn-hangzhou.aliyuncs.com/ossrs/srs:3
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 1935
              name: rtmp
              protocol: TCP
            - containerPort: 1985
              name: api
              protocol: TCP
            - containerPort: 8080
              name: http
              protocol: TCP
          volumeMounts:
            - name: cache-volume
              mountPath: /usr/local/srs/objs/nginx/html
              readOnly: false
            - name: config-volume
              mountPath: /usr/local/srs/conf
---
apiVersion: v1
kind: Service
metadata:
  name: socs
spec:
  clusterIP: None
  selector:
    app: srs-origin
  ports:
    - name: socs-1935-1935
      port: 1935
      protocol: TCP
      targetPort: 1935
---
apiVersion: v1
kind: Service
metadata:
  name: srs-api-service
spec:
  type: NodePort
  selector:
    app: srs-origin
#    statefulset.kubernetes.io/pod-name: srs-origin-0
  ports:
    - name: srs-api-service-1985-1985
      port: 1985
      protocol: TCP
      targetPort: 1985
    - name: srs-web-svc-8080
      port: 8080
      targetPort: 8080
      protocol: TCP
      nodePort: 30080
---
### srs edge
#---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: srs-edge
  labels:
    app: srs-edge
spec:
  replicas: 2
  template:
    metadata:
      name: srs-edge
      labels:
        app: srs-edge
    spec:
      volumes:
        - name: config-volume
          configMap:
            name: srs-edge-config
      containers:
        - name: srs-edge
          image: registry.cn-hangzhou.aliyuncs.com/ossrs/srs:3
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 1935
              protocol: TCP
              name: rtmp
            - containerPort: 1985
              protocol: TCP
              name: api
            - containerPort: 8080
              protocol: TCP
              name: http
          volumeMounts:
            - name: config-volume
              mountPath: /usr/local/srs/conf
#          lifecycle:
#            preStop:
#              exec:
#                command: ["/usr/local/srs/etc/init.d/srs", "grace"]
      restartPolicy: Always
#      terminationGracePeriodSeconds: 120
  selector:
    matchLabels:
      app: srs-edge
---
apiVersion: v1
kind: Service
metadata:
  name: srs-edge-service
spec:
  type: NodePort
  selector:
    app: srs-edge
  ports:
    - name: srs-edge-service-1935-1935
      port: 1935
      protocol: TCP
      targetPort: 1935
      nodePort: 31935
    - name: srs-edge-service-8080-8080
      port: 8080
      protocol: TCP
      targetPort: 8080
      nodePort: 31080
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: easydarwin-rtpudp-nested
  labels:
    app: easydarwin-rtpudp-nested
spec:
  replicas: 1
  template:
    metadata:
      name: easydarwin-rtpudp-nested
      labels:
        app: easydarwin-rtpudp-nested
    spec:
      nodeSelector:
        kubernetes.io/os: linux
        #此处添加了node节点筛选器指定node labels 为master的节点 可以通过 `kubectl label nodes NODE_NAME srs-rtsp=master` 指定
        srs-rtsp: master
      # 使其共用宿主机网络,方便rtsp udp推送
      hostNetwork: true
      containers:
        - name: easydarwin-rtpudp-nested
          image: registry.cn-hangzhou.aliyuncs.com/justtin/easydarwin
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 554
              protocol: TCP
              name: rtsp
            - containerPort: 10008
              protocol: TCP
              name: http
          env:
            - name: RTPSERVER_UDPORT_RANGE
              value: 50000:55000
            - name: CLOSE_OLD
              value: "0"
            - name: EASYDARWIN_PUSH_FFMPEG_CMD
              value: "ffmpeg -i rtsp://127.0.0.1/{path} -c copy -v error -f rtsp -rtsp_transport tcp rtsp://127.0.0.1:30554/{path} -hide_banner"
      restartPolicy: Always
  selector:
    matchLabels:
      app: easydarwin-rtpudp-nested
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: srs-aac-edge
  labels:
    app: srs-aac-edge
spec:
  replicas: 2
  template:
    metadata:
      name: srs-aac-edge
      labels:
        app: srs-aac-edge
    spec:
      volumes:
        - name: config-volume
          configMap:
            name: srs-edge-aac-config
      containers:
        - name: srs-aac-edge
          image: registry.cn-hangzhou.aliyuncs.com/ossrs/srs:3
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 1935
              protocol: TCP
              name: rtmp
            - containerPort: 1985
              protocol: TCP
              name: api
            - containerPort: 8080
              protocol: TCP
              name: http
          volumeMounts:
            - name: config-volume
              mountPath: /usr/local/srs/conf
      restartPolicy: Always
  selector:
    matchLabels:
      app: srs-aac-edge
---
apiVersion: v1
kind: Service
metadata:
  name: srs-aac-rtmp-edge-svc
spec:
  clusterIP: None
  selector:
    app: srs-aac-edge
  ports:
    - name: socs-1935-1935
      port: 1935
      protocol: TCP
      targetPort: 1935
---
apiVersion: v1
kind: Service
metadata:
  name: srs-aac-http-edge-svc
spec:
  type: NodePort
  selector:
    app: srs-aac-edge
  #    statefulset.kubernetes.io/pod-name: srs-origin-0
  ports:
    - name: srs-api-service-1985-1985
      port: 1985
      protocol: TCP
      targetPort: 1985
    - name: srs-web-svc-8080
      port: 8080
      targetPort: 8080
      protocol: TCP
      nodePort: 32080
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: srs-mp3-edge
  labels:
    app: srs-mp3-edge
spec:
  replicas: 2
  template:
    metadata:
      name: srs-mp3-edge
      labels:
        app: srs-mp3-edge
    spec:
      volumes:
        - name: config-volume
          configMap:
            name: srs-edge-mp3-config
      containers:
        - name: srs-mp3-edge
          image: registry.cn-hangzhou.aliyuncs.com/ossrs/srs:3
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 1935
              protocol: TCP
              name: rtmp
            - containerPort: 1985
              protocol: TCP
              name: api
            - containerPort: 8080
              protocol: TCP
              name: http
          volumeMounts:
            - name: config-volume
              mountPath: /usr/local/srs/conf
      restartPolicy: Always
  selector:
    matchLabels:
      app: srs-mp3-edge
---
apiVersion: v1
kind: Service
metadata:
  name: srs-mp3-rtmp-edge-svc
spec:
  clusterIP: None
  selector:
    app: srs-mp3-edge
  ports:
    - name: socs-1935-1935
      port: 1935
      protocol: TCP
      targetPort: 1935
---
apiVersion: v1
kind: Service
metadata:
  name: srs-mp3-http-edge-svc
spec:
  type: NodePort
  selector:
    app: srs-mp3-edge
  #    statefulset.kubernetes.io/pod-name: srs-origin-0
  ports:
    - name: srs-api-service-1985-1985
      port: 1985
      protocol: TCP
      targetPort: 1985
    - name: srs-web-svc-8080
      port: 8080
      targetPort: 8080
      protocol: TCP
      nodePort: 32180
